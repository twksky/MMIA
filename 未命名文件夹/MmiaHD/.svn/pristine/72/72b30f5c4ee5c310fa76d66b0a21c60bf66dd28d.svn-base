//
//  MmiaForgetViewController.m
//  MmiaHD
//
//  Created by twksky on 15/3/23.
//  Copyright (c) 2015年 yhx. All rights reserved.
//

#import "MmiaForgetViewController.h"
#import "AdditionHeader.h"
#import "MmiaLoginMacro.h"
#import "MmiaToast.h"
#import "MmiJudgeTypeUtil.h"
#import "MmiaProcessView.h"
#import "AppDelegate.h"
#import "MmiaVerSucessView.h"
#import "MmiaLoginViewController.h"

#define Reset_BackButton_Tag              100
#define Reset_FininshButton_Tag           101
#define Reset_VertifyButton_Tag           102
//TextFiled tag值
#define Reset_UserTextFiled_Tag           200
#define Reset_PassWordTextFiled_Tag       201
#define Reset_ConfirmPassTextFiled_Tag    202
#define Reset_VertifyTextFiled_Tag        203
// view 提示
#define Vertify_Success_Tag               300
#define Reset_In_View_Tag                 301

#pragma clang diagnostic ignored "-Warc-performSelector-leaks"

@interface MmiaForgetViewController ()<UITextFieldDelegate>

@end

@implementation MmiaForgetViewController
{
    BOOL _isRegister;
    BOOL _isUp;
    UIButton *messageBtn;
    int timeCount;
    id target;
    SEL registerSuccessAction;
    BOOL isPortrait;
    
}

-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    // 获取标准的self.view.frame
    if( UIInterfaceOrientationIsPortrait(self.interfaceOrientation) )
    {
        isPortrait = YES;
    }
    UIView *view = [self.view viewWithTag:TAG_ALL_VIEW];
    if (isPortrait) {
        view.center = CGPointMake(Mmia_Portrait_Weight/2,Mmia_Portrait_Height/2);
    }else{
        view.center = CGPointMake(Mmia_Portrait_Height/2,Mmia_Portrait_Weight/2);
    }

}

- (void)viewDidLoad {
    [super viewDidLoad];

    // Do any additional setup after loading the view.
    self.view.backgroundColor = [UIColor colorWithWhite:0.0f alpha:0.8f];
    _isRegister = YES;
    [self creatForget];
}

-(void)creatForget
{
    UIView *loginView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, Vertical_Login_View_Weight, Vertical_Login_View_Height)];
    [self.view addSubview:loginView];
    
    //    loginBackView.tag = 11;
    loginView.tag = TAG_ALL_VIEW;

    //背景
    UIImageView *bgImageView = [[UIImageView alloc]initWithFrame:loginView.bounds];
    bgImageView.image = [UIImage imageNamed:@"login_bg.png"];
    [loginView addSubview:bgImageView];
    //黑上框
    UIView *topView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, Vertical_Login_View_Weight, Vertical_Login_TopView_Height)];
    topView.backgroundColor = ColorWithHexRGB(0x272832);
    [bgImageView addSubview:topView];
    bgImageView.userInteractionEnabled = YES;
    //取消按钮
    UIButton *CancelBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    CancelBtn.frame = CGRectMake(Vertical_Login_Btn_LeftGap, Vertical_Login_Btn_TopGap, 32, 32);
    [CancelBtn addTarget:self action:@selector(click:) forControlEvents:UIControlEventTouchUpInside];
    [CancelBtn setTitle:@"取消" forState:UIControlStateNormal];
    CancelBtn.titleLabel.font = [UIFont systemFontOfSize:Login_FrontSize];
    CancelBtn.backgroundColor = [UIColor clearColor];
    CancelBtn.tag = Reset_BackButton_Tag;
    [topView addSubview:CancelBtn];
    
    //主标题
    UILabel *title = [[UILabel alloc]init];
    title.text = @"忘记密码";
    title.frame = CGRectMake(0, 0, 80, Vertical_Login_TopView_Height);
    title.center = CGPointMake(Vertical_Login_View_Weight/2, Vertical_Login_TopView_Height/2);
    title.textAlignment = NSTextAlignmentCenter;
    title.font = [UIFont systemFontOfSize:Login_TitleFrontSize];
    title.textColor = [UIColor whiteColor];
    title.backgroundColor = [UIColor clearColor];
    [topView addSubview:title];
    
    //logo
    UIImageView *logoImageView = [[UIImageView alloc]initWithImage:[UIImage imageNamed:@"loginpage_icon.png"]];
    logoImageView.frame = CGRectMake((Vertical_Login_View_Weight-logoImageView.frame.size.width)/2, Vertical_Login_TopView_Height+Vertical_Login_TopGap, logoImageView.frame.size.width, logoImageView.frame.size.height);
    [bgImageView addSubview:logoImageView];
    
    
    //用户名和密码
    UIImage *userImage = [UIImage imageNamed:@"loginpage_usernameicon.png"];
    UIImageView *userImageView = [[UIImageView alloc]initWithFrame:CGRectMake((Vertical_Login_View_Weight-Vertical_Login_Logo_Weight)/2+Vertical_Login_LeftGap, Vertical_Login_TopView_Height+Vertical_Login_TopGap+logoImageView.frame.size.height+Vertical_Login_BottomGap, userImage.size.width, userImage.size.height)];
    userImageView.contentMode = UIViewContentModeLeft;
    userImageView.image = userImage;
    [loginView addSubview:userImageView];
    
    
    UITextField *userTextFiled = [[UITextField alloc]initWithFrame:CGRectMake((Vertical_Login_View_Weight-Vertical_Login_Logo_Weight)/2+userImageView.frame.size.width+Vertical_Login_LeftGap*2, Vertical_Login_TopView_Height+Vertical_Login_TopGap+logoImageView.frame.size.height+Vertical_Login_BottomGap, Vertical_Login_Logo_Weight-Vertical_Login_LeftGap*2-userImageView.frame.size.width, Vertical_Login_Account_Height)];
    userTextFiled.backgroundColor = [UIColor orangeColor];
    userTextFiled.tag = Reset_UserTextFiled_Tag;
    userTextFiled.delegate = self;
    
    userTextFiled.returnKeyType = UIReturnKeyNext;
    userTextFiled.backgroundColor = [UIColor clearColor];
    userTextFiled.clearButtonMode=UITextFieldViewModeAlways;
    UIColor *palceColor = [UIColor whiteColor];
    userTextFiled.attributedPlaceholder = [[NSAttributedString alloc]initWithString:@"手机号" attributes:@{NSForegroundColorAttributeName: palceColor}];
    userTextFiled.textAlignment = NSTextAlignmentCenter;
    userTextFiled.contentVerticalAlignment = UIControlContentVerticalAlignmentCenter;
    userTextFiled.textColor =  ColorWithHexRGB(0xffffff);
    userTextFiled.font = [UIFont systemFontOfSize:12];
    [loginView addSubview:userTextFiled];
    
    UILabel *userLine = [[UILabel alloc]initWithFrame:CGRectMake((Vertical_Login_View_Weight-Vertical_Login_Logo_Weight)/2, CGRectGetMaxY(userTextFiled.frame), Vertical_Login_Logo_Weight, 0.5)];
    userLine.backgroundColor = ColorWithHexRGB(0xffffff);
    [loginView addSubview:userLine];
    
    
    //密码
    UIImage *passWordImage = [UIImage imageNamed:@"loginpage_passwordicon.png"];
    UIImageView *passWordImageView = [[UIImageView alloc]initWithFrame:CGRectMake(CGRectGetMinX(userImageView.frame), CGRectGetMidY(userImageView.frame)+Vertical_Login_Account_Height, passWordImage.size.width, passWordImage.size.height)];
    passWordImageView.contentMode = UIViewContentModeLeft;
    passWordImageView.image = passWordImage;
    [loginView addSubview:passWordImageView];
    UITextField *passWordTextFiled = [[UITextField alloc]initWithFrame:CGRectMake((Vertical_Login_View_Weight-Vertical_Login_Logo_Weight)/2+userImageView.frame.size.width+Vertical_Login_LeftGap*2, Vertical_Login_TopView_Height+Vertical_Login_TopGap+logoImageView.frame.size.height+Vertical_Login_BottomGap+Vertical_Login_Account_Height, Vertical_Login_Logo_Weight-Vertical_Login_LeftGap*2-userImageView.frame.size.width, Vertical_Login_Account_Height)];
    passWordTextFiled.tag = Reset_PassWordTextFiled_Tag;
    passWordTextFiled.delegate = self;
    
    passWordTextFiled.clearButtonMode=UITextFieldViewModeAlways;
    passWordTextFiled.secureTextEntry = YES;
    passWordTextFiled.attributedPlaceholder = [[NSAttributedString alloc]initWithString:@"新密码" attributes:@{NSForegroundColorAttributeName: palceColor}];
    passWordTextFiled.contentVerticalAlignment = UIControlContentVerticalAlignmentCenter;
    passWordTextFiled.textColor =  ColorWithHexRGB(0xffffff);
    passWordTextFiled.textAlignment = NSTextAlignmentCenter;
    passWordTextFiled.font = [UIFont systemFontOfSize:12];
    [loginView addSubview:passWordTextFiled];
    
    UILabel *passWordLine = [[UILabel alloc]initWithFrame:CGRectMake(CGRectGetMinX(userLine.frame), CGRectGetMaxY(userLine.frame)+44, Vertical_Login_Account_Weight, 0.5)];
    passWordLine.backgroundColor = ColorWithHexRGB(0xffffff);
    [loginView addSubview:passWordLine];
    
    
    //
    //再输入密码
    UIImage *repeatPasswordImage = [UIImage imageNamed:@"loginpage_repeatpasswordicon.png"];
    UIImageView *repeatPasswordImageView = [[UIImageView alloc]initWithFrame:CGRectMake(CGRectGetMinX(userImageView.frame), CGRectGetMidY(userImageView.frame)+Vertical_Login_Account_Height+Vertical_Login_Account_Height, passWordImage.size.width, passWordImage.size.height)];
    repeatPasswordImageView.contentMode = UIViewContentModeLeft;
    repeatPasswordImageView.image = repeatPasswordImage;
    [loginView addSubview:repeatPasswordImageView];
    
    UITextField *repeatPasswordTextFiled = [[UITextField alloc]initWithFrame:CGRectMake((Vertical_Login_View_Weight-Vertical_Login_Logo_Weight)/2+userImageView.frame.size.width+Vertical_Login_LeftGap*2, Vertical_Login_TopView_Height+Vertical_Login_TopGap+logoImageView.frame.size.height+Vertical_Login_BottomGap+Vertical_Login_Account_Height+Vertical_Login_Account_Height, Vertical_Login_Logo_Weight-Vertical_Login_LeftGap*2-userImageView.frame.size.width, Vertical_Login_Account_Height)];
    repeatPasswordTextFiled.tag = Reset_ConfirmPassTextFiled_Tag;
    repeatPasswordTextFiled.delegate = self;
    
    repeatPasswordTextFiled.clearButtonMode=UITextFieldViewModeAlways;
    repeatPasswordTextFiled.secureTextEntry = YES;
    repeatPasswordTextFiled.attributedPlaceholder = [[NSAttributedString alloc]initWithString:@"再次输入新密码" attributes:@{NSForegroundColorAttributeName: palceColor}];
    repeatPasswordTextFiled.contentVerticalAlignment = UIControlContentVerticalAlignmentCenter;
    repeatPasswordTextFiled.textColor =  ColorWithHexRGB(0xffffff);
    repeatPasswordTextFiled.textAlignment = NSTextAlignmentCenter;
    repeatPasswordTextFiled.font = [UIFont systemFontOfSize:12];
    [loginView addSubview:repeatPasswordTextFiled];
    
    UILabel *repeatPasswordLine = [[UILabel alloc]initWithFrame:CGRectMake(CGRectGetMinX(userLine.frame), CGRectGetMaxY(userLine.frame)+Vertical_Login_Account_Height*2, Vertical_Login_Account_Weight, 0.5)];
    repeatPasswordLine.backgroundColor = ColorWithHexRGB(0xffffff);
    [loginView addSubview:repeatPasswordLine];
    
    
    //输入验证码
    UITextField *phoneTextFiled = [[UITextField alloc]initWithFrame:CGRectMake(CGRectGetMinX(repeatPasswordLine.frame), CGRectGetMaxY(repeatPasswordLine.frame)+20, repeatPasswordLine.frame.size.width-26-136, 46)];
    phoneTextFiled.tag = Reset_VertifyTextFiled_Tag;
    phoneTextFiled.delegate = self;
    
    phoneTextFiled.clearButtonMode=UITextFieldViewModeAlways;
    phoneTextFiled.secureTextEntry = YES;
    phoneTextFiled.attributedPlaceholder = [[NSAttributedString alloc]initWithString:@"输入验证码" attributes:@{NSForegroundColorAttributeName: palceColor}];
    phoneTextFiled.contentVerticalAlignment = UIControlContentVerticalAlignmentCenter;
    phoneTextFiled.textColor =  ColorWithHexRGB(0xffffff);
    phoneTextFiled.textAlignment = NSTextAlignmentCenter;
    phoneTextFiled.font = [UIFont systemFontOfSize:12];
    [loginView addSubview:phoneTextFiled];
    
    UILabel *phoneLine = [[UILabel alloc]initWithFrame:CGRectMake(CGRectGetMinX(userLine.frame), CGRectGetMaxY(userLine.frame)+Vertical_Login_Account_Height*3+20, Vertical_Login_Account_Weight-26-136, 0.5)];
    phoneLine.backgroundColor = ColorWithHexRGB(0xffffff);
    [loginView addSubview:phoneLine];

    //验证码
    UIButton *vertifyButton = [UIButton buttonWithType:UIButtonTypeCustom];
    vertifyButton.frame = CGRectMake(CGRectGetMaxX(phoneLine.frame) + 26, CGRectGetMinY(phoneLine.frame) - 46, 136, 46);
    vertifyButton.tag = Reset_VertifyButton_Tag;
    vertifyButton.clipsToBounds = YES;
    vertifyButton.layer.cornerRadius = 2.5f;
    vertifyButton.layer.borderColor = [ColorWithHexRGB(0xffffff) CGColor];
    vertifyButton.layer.borderWidth = 0.5;
//    vertifyButton.backgroundColor = [UIColor clearColor];
    vertifyButton.titleLabel.textColor = ColorWithHexRGB(0xffffff);
    [vertifyButton setTitle:@"获取验证码" forState:UIControlStateNormal];
    [vertifyButton.titleLabel setFont:[UIFont systemFontOfSize:12]];
    [vertifyButton addTarget:self action:@selector(click:) forControlEvents:UIControlEventTouchUpInside];
    [loginView addSubview:vertifyButton];
    
    //
    messageBtn = vertifyButton;
    
    //完成
    UIButton *finishButton = [UIButton buttonWithType:UIButtonTypeCustom];
    finishButton.frame = CGRectMake(CGRectGetMinX(repeatPasswordLine.frame), CGRectGetMaxY(phoneLine.frame) + 20,repeatPasswordLine.frame.size.width, 46);
    finishButton.tag = Reset_FininshButton_Tag;
    [finishButton setTitle:@"完成" forState:UIControlStateNormal];
    finishButton.backgroundColor = ColorWithHexRGB(0xe43f50);
    finishButton.clipsToBounds = YES;
    finishButton.layer.cornerRadius = 2.5;
    [finishButton addTarget:self action:@selector(click:) forControlEvents:UIControlEventTouchUpInside];
    [loginView addSubview:finishButton];
    
    //提示验证码成功时，验证码发送的地方
    MmiaVerSucessView *verView=[[MmiaVerSucessView alloc]initWithFrame:CGRectMake(-120, CGRectGetMaxY(finishButton.frame), loginView.frame.size.width, 40)];
    verView.hidden=YES;
    
    verView.vertifyLabel.text=@"验证码已成功发送至手机";
    verView.tag = Vertify_Success_Tag;
    [loginView  addSubview:verView];
    
//    UIButton *backButton = [UIButton buttonWithType:UIButtonTypeCustom];
//    backButton.tag = Reset_BackButton_Tag;
//    backButton.frame = CGRectMake(0, App_Frame_Height - 30 - 3, 60, 30);
//    [backButton setBackgroundColor:[UIColor clearColor]];
//    [backButton setTitle:@"返回" forState:UIControlStateNormal];
//    [backButton.titleLabel setFont:[UIFont systemFontOfSize:15]];
//    backButton.titleLabel.textAlignment = MMIATextAlignmentLeft;
//    [backButton addTarget:self action:@selector(click:) forControlEvents:UIControlEventTouchUpInside];
//    [self.view addSubview:backButton];

}

#pragma mark-replaceAlertView
- (void) show_check_phone_info:(NSString *)_str
{
    [MmiaToast showWithText:_str topOffset:Main_Screen_Height-20 image:nil];
    
}

-(void)click:(UIButton *)btn
{
    [self resignAllFiled];
    if (btn.tag == Reset_BackButton_Tag) {
        [self dismissViewControllerAnimated:NO completion:nil];
        NSLog(@"取消");
    }
    else if (btn.tag == Reset_VertifyButton_Tag){
        NSLog(@"获取验证码");
        UITextField *userTextFiled = (UITextField *)[self.view viewWithTag:Reset_UserTextFiled_Tag];
        if (userTextFiled.text.length == 0)
        {
            [self show_check_phone_info:@"手机号不能为空"];
            return ;
        }
        if ([MmiJudgeTypeUtil isPhoneNumber:userTextFiled.text] == NO)
        {
            [self show_check_phone_info:@"请输入正确的手机号"];
            return;
        }
        [btn setBackgroundColor:[UIColor colorWithWhite:1 alpha:0.5]];
        [btn.titleLabel setBackgroundColor:[UIColor clearColor]];
        [btn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
        [self sendVertifyRequest];
    
    }
    else if (btn.tag == Reset_FininshButton_Tag)
    {
        NSLog(@"完成");
        if ([self isAbleToSendVertifyRequest] == YES && [self isVertifyCorrect] == YES)
        {
            
            if (_isRegister == YES)
            {
                MmiaProcessView *processView = [[MmiaProcessView alloc]initWithMessage:@"修改密码中..." top:App_Frame_Height];
                processView.tag = Reset_In_View_Tag;
                [processView showInRootView:self.view];
                [self sendPassWordRequest];
            }
            else
            {
                MmiaProcessView *processView = [[MmiaProcessView alloc]initWithMessage:@"正在验证信息..." top:App_Frame_Height];
                processView.tag = Reset_In_View_Tag;
                [processView showInRootView:self.view];
                [self sendRegistRequest];
            }
            
        }

    }
}

#pragma mark - resign
- (void)resignAllFiled
{
    UITextField *userName = (UITextField *)[self.view viewWithTag:Reset_UserTextFiled_Tag];
    UITextField *password = (UITextField *)[self.view viewWithTag:Reset_PassWordTextFiled_Tag];
    UITextField *confirmTextField = ((UITextField *)[self.view viewWithTag: Reset_ConfirmPassTextFiled_Tag]);
    UITextField *vertifyTextFiled=(UITextField *)[self.view viewWithTag:Reset_VertifyTextFiled_Tag];
    [userName resignFirstResponder];
    [password resignFirstResponder];
    [confirmTextField resignFirstResponder];
    [vertifyTextFiled resignFirstResponder];
    if (_isUp)
    {
        [self restoreLocation];
    }
}
-(void)restoreLocation
{
    [UIView animateWithDuration:0.2 animations:^{
        [self.view setFrame:CGRectMake(self.view.frame.origin.x, 0, self.view.frame.size.width, self.view.frame.size.height)];
        _isUp=NO;
    }];
}
- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event
{
    
    [self resignAllFiled];
}

#pragma mark-sendRequest
/* 获取验证码 */

- (void)sendVertifyRequest
{
    [self changeButtonTitle];
    AppDelegate *app = (AppDelegate *)[[UIApplication sharedApplication]delegate];
    UITextField *userTextFiled = (UITextField *)[self.view viewWithTag:Reset_UserTextFiled_Tag];
    NSString *url = [[NSString alloc]init];
    NSString *userTypeStr = [[NSString alloc]init];
    NSMutableDictionary *dict = [[NSMutableDictionary alloc]init];
    url = Mmia_REGISTER_PHONE_VERITY_URL;
    userTypeStr = @"phone";
    //    if ([MMIJudgeTypeUtil isEmailNumber:userTextFiled.text])
    //    {
    //        url = MMia_REGISTER_MAIL_VERITY_URL;
    //        userTypeStr = @"email";
    //        //无输入昵称的项，参数却有
    //        //[dict setObject:@"fault" forKey:@"nickName"];
    //    }else{
    //        url = MMia_REGISTER_PHONE_VERITY_URL;
    //        userTypeStr = @"phone";
    //    }
    [dict setObject:userTextFiled.text forKey:userTypeStr];
    if (_isRegister)
    {
        [dict setObject:[NSNumber numberWithInt:1] forKey:@"validateType"];
    }else
    {
        [dict setObject:[NSNumber numberWithInt:0] forKey:@"validateType"];
    }
    MmiaVerSucessView *sucView=(MmiaVerSucessView *)[self.view viewWithTag:Vertify_Success_Tag];
    [app.mmiaNetworkEngine startAsyncRequestWithUrl:url param:dict requestMethod:HTTP_REQUEST_POST completionHandler:^(NSDictionary *jsonDict){
        
        if ([jsonDict[@"result"]intValue] == 0) {
            sucView.hidden=NO;
            sucView.vertifyLabel.text = @"验证码已成功发送至手机";

            sucView.vertifyToLabel.text = userTextFiled.text;
        }else if ([jsonDict[@"result"]intValue] == 3)
        {
            sucView.hidden=YES;
            [self show_check_phone_info:@"该用户没有注册"];
            _isRegister = NO;
            UIButton *finishButton = (UIButton *)[self.view viewWithTag:Reset_FininshButton_Tag];
            [finishButton setTitle:@"完成" forState:UIControlStateNormal];
            [finishButton setBackgroundColor:ColorWithHexRGB(0x272832)];
        }
        else
        {
//            NSLog(@"%d",[jsonDict[@"result"]intValue]);
            sucView.hidden=YES;
            [self show_check_phone_info:@"很遗憾，获取验证码失败"];
        }
        
    }errorHandler:^(NSError *error){
        if (app.mmiaNetworkEngine.isReachable==NO)
        {
            [self show_check_phone_info:@"没有网络连接"];
        }else
        {
            [self show_check_phone_info:@"网络不给力，请稍后重试"];
            
        }
        sucView.hidden=YES;
    }];
    
}

-(void)sendRegistRequest
{
    MmiaProcessView *processView = (MmiaProcessView *)[self.view viewWithTag:Reset_In_View_Tag];
    AppDelegate *app = (AppDelegate *)[[UIApplication sharedApplication]delegate];
    UITextField *userNameTextField = (UITextField *)[self.view viewWithTag:Reset_UserTextFiled_Tag];
    UITextField *passwordTextField = (UITextField *)[self.view viewWithTag:Reset_PassWordTextFiled_Tag];
    UITextField *vertifyTextFiled=(UITextField *)[self.view viewWithTag:Reset_VertifyTextFiled_Tag];
    
    NSString *registerTypeStr=[[NSString alloc]init];
    NSMutableDictionary *dict=[[NSMutableDictionary alloc]init];
    registerTypeStr=@"phone";
    //      if ([MMIJudgeTypeUtil isEmailNumber:userNameTextField.text])
    //      {
    //         registerTypeStr=@"email";
    //        [dict setObject:nikeNameTextFiled.text forKey:@"nickName"];
    //      }else{
    //          registerTypeStr=@"phone";
    //           [dict setObject:nikeNameTextFiled.text forKey:@"nickName"];
    //      }
    [dict setObject:userNameTextField.text forKey:registerTypeStr];
    
    [dict setObject:[passwordTextField.text md5] forKey:@"password"];
    [dict setObject:vertifyTextFiled.text forKey:@"validateCode"];
    [dict setObject:[NSNumber numberWithInt:0] forKey:@"userType"];
    
    [app.mmiaNetworkEngine startAsyncRequestWithUrl:Mmia_REGISTER_URL param:dict requestMethod:HTTP_REQUEST_POST completionHandler:^(NSDictionary *jsonDict){
        
        if ([jsonDict[@"result"]intValue]==0)
        {
            NSUserDefaults *defaults=[NSUserDefaults standardUserDefaults];
            [defaults setObject:jsonDict[@"id"] forKey:USER_ID];
            [defaults setObject:jsonDict[@"ticket"] forKey:USER_TICKET];
            [defaults setBool:YES forKey:USER_IS_LOGIN];
            [defaults synchronize];
            if( [target respondsToSelector:registerSuccessAction] )
            {
                [target performSelector:registerSuccessAction];
            }
            _isRegister = YES;
        }
        else{
            [self show_check_phone_info:jsonDict[@"message"]];
        }
        [processView dismiss];
        
    }errorHandler:^(NSError *error){
        if (app.mmiaNetworkEngine.isReachable==NO) {
            [self show_check_phone_info:@"没有网络连接"];
        }else{
            [self show_check_phone_info:@"网络不给力，请稍后重试"];
        }
        [processView dismiss];
        // o1jn o
        
    }];
}

- (void)sendPassWordRequest
{
    //完成按钮
    MmiaProcessView *processView = (MmiaProcessView *)[self.view viewWithTag:Reset_In_View_Tag];
    AppDelegate *app = (AppDelegate *)[[UIApplication sharedApplication]delegate];
    UITextField *userTextFiled = (UITextField *)[self.view viewWithTag:Reset_UserTextFiled_Tag];
    UITextField *passWordTextFiled = (UITextField *)[self.view viewWithTag:Reset_PassWordTextFiled_Tag];
    UITextField *vertifyTextFiled = (UITextField *)[self.view viewWithTag:Reset_VertifyTextFiled_Tag];
    NSMutableDictionary *dict=[NSMutableDictionary dictionaryWithObjectsAndKeys:userTextFiled.text,@"loginName",[passWordTextFiled.text md5],@"new_password",vertifyTextFiled.text,@"validateCode", nil];
    [app.mmiaNetworkEngine startAsyncRequestWithUrl:Mmia_FORGET_PASSWORD_URL param:dict requestMethod:HTTP_REQUEST_POST completionHandler:^(NSDictionary *jsonDict){
        
        if ([jsonDict[@"result"]intValue]==0) {
            
//            for (UIViewController *vc in self.navigationController.viewControllers)
//            {
//                if ([vc isKindOfClass:[MMIALoginViewController class]]){
//                    [self.navigationController popToViewController:vc animated:YES];
//                }
//            }
            [self dismissViewControllerAnimated:YES completion:^{
                NSLog(@"修改密码成功");
            }];
            
        }else{
            
            [self show_check_phone_info:jsonDict[@"message"]];
        }
        [processView dismiss];
        
    }errorHandler:^(NSError *error){
        [processView dismiss];
        if (app.mmiaNetworkEngine.isReachable==NO) {
            [self show_check_phone_info:@"没有网络连接"];
        }else{
            [self show_check_phone_info:@"网络不给力，请稍后重试"];
        }
        
    }];
    
}

#pragma mark -isAbleToComplete And sendRequest
- (BOOL)isAbleToSendVertifyRequest
{
        UITextField *newPassword = (UITextField *)[self.view viewWithTag:Reset_PassWordTextFiled_Tag];
        UITextField *ensurepassWord = (UITextField *)[self.view viewWithTag:Reset_ConfirmPassTextFiled_Tag];
        if (newPassword.text.length==0) {
            [self show_check_phone_info:@"密码不能为空"];
            return NO;
        }
        if (newPassword.text.length<6 || newPassword.text.length>20) {
            [self show_check_phone_info:@"密码为6-20个字母、数字"];
            return NO;
        }
        if (ensurepassWord.text.length==0) {
            [self show_check_phone_info:@"确认密码不能为空"];
            return NO;
        }
        
        if ([newPassword.text isEqualToString:ensurepassWord.text]==NO) {
            [self show_check_phone_info:@"密码和确认密码不一样"];
            return NO;
        }
        return YES;
    }
//判断验证码
- (BOOL)isVertifyCorrect
{
    UITextField *vertifyTextFiled=(UITextField *)[self.view viewWithTag:Reset_VertifyTextFiled_Tag];
    if (vertifyTextFiled.text.length == 0) {
        [self show_check_phone_info:@"验证码为空"];
        return NO;
    }
    return YES;
}


- (void)changeButtonTitle
{
    messageBtn.enabled = NO;
    timeCount=60;
    [messageBtn setTitle:@"重新发送(60)" forState:UIControlStateNormal];
    [NSTimer scheduledTimerWithTimeInterval:1.0 target:self selector:@selector(timerFunction:) userInfo:nil repeats:YES];
    UITextField *userTextFiled = (UITextField *)[self.view viewWithTag:Reset_UserTextFiled_Tag];
    userTextFiled.enabled=NO;
}

- (void)timerFunction:(NSTimer *)timer
{
    messageBtn.enabled = NO;
    timeCount--;
    if (timeCount == 0) {
        if ([timer isValid]) {
            [timer invalidate];
            timer = nil;
        }
        [messageBtn setTitle:@"获取验证码" forState:UIControlStateNormal];
        [messageBtn setTitle:[NSString stringWithFormat:@"重新发送(%d)",60] forState:UIControlStateDisabled];
        [messageBtn setBackgroundColor:[UIColor clearColor]];
        // messageBtn.backgroundColor=[UIColor lightGrayColor];
        [messageBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        messageBtn.enabled = YES;
        UITextField *userTextFiled = (UITextField *)[self.view viewWithTag:Reset_UserTextFiled_Tag];
        userTextFiled.enabled = YES;
    } else {
        [messageBtn setTitle:[NSString stringWithFormat:@"重新发送(%d)",timeCount] forState:UIControlStateDisabled];
    }
}





#pragma mark - UITextFieldDelegate

- (void)textFieldDidBeginEditing:(UITextField *)textField
{
    
    if (_isUp==NO )
    {
        [UIView animateWithDuration:0.2 animations:^{
            [self.view setFrame:CGRectMake(self.view.frame.origin.x, -120, self.view.frame.size.width, self.view.frame.size.height)];
            _isUp=YES;
        }];
    }
}
-(void)textFieldDidEndEditing:(UITextField *)textField{
    if (_isUp) {
        [self restoreLocation];
    }
}

- (BOOL)textFieldShouldReturn:(UITextField *)textField
{
    UITextField *confirmTextField = ((UITextField *)[self.view viewWithTag: Reset_ConfirmPassTextFiled_Tag]);
    UITextField *vertifyTextFiled=(UITextField *)[self.view viewWithTag:Reset_VertifyTextFiled_Tag];
    if (textField.tag == Reset_PassWordTextFiled_Tag)
    {
        [textField resignFirstResponder];
        [confirmTextField becomeFirstResponder];
        return NO;
    }else if (textField.tag == Reset_ConfirmPassTextFiled_Tag)
    {
        [textField resignFirstResponder];
        [vertifyTextFiled becomeFirstResponder];
        return NO;
    }
    
    [textField resignFirstResponder];
    [self restoreLocation];
    
    return YES;
}

-(BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string
{
    
    UITextField *inputVery = (UITextField *)[self.view viewWithTag:Reset_VertifyTextFiled_Tag];
    if (inputVery==textField)
    {
        if (inputVery.text.length>=6 && ![string isEqualToString:@""])
        {
            return NO;
        }
        
    }
    return YES;
}


#pragma mark - UIViewControllerRotation

- (void)willRotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration
{
    [self.presentingViewController willRotateToInterfaceOrientation:toInterfaceOrientation duration:duration];
    UIView *view = [self.view viewWithTag:TAG_ALL_VIEW];
    if( !UIInterfaceOrientationIsPortrait(toInterfaceOrientation) )
    {
        // 竖屏
        isPortrait = YES;
        view.center = CGPointMake(Mmia_Portrait_Height/2,Mmia_Portrait_Weight/2);
    }
    else
    {
        // 横屏
        isPortrait = NO;
        view.center = CGPointMake(Mmia_Portrait_Weight/2,Mmia_Portrait_Height/2);
        
    }
    [view reloadInputViews];
    
}


- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
