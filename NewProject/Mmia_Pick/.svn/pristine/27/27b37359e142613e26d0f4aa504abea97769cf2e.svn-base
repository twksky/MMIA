//
//  MmiaDetailSearchViewController.m
//  MMIA
//
//  Created by lixiao on 15/5/20.
//  Copyright (c) 2015å¹´ lixiao. All rights reserved.
//

#import "MmiaDetailSearchViewController.h"
#import "MmiaSingleGoodsCollectionCell.h"
#import "MmiaDescripBrandCollectionCell.h"
#import "MmiaDetailSearchRequestModel.h"
#import "NSObject+MJKeyValue.h"
#import "MmiaLoadingCollectionCell.h"

@interface MmiaDetailSearchViewController (){
    NSString               *_keyWord;
    UILabel                *_searchLabel;
    MmiaPaperResponseModel *_dataModel;
    NSInteger               _slide;
    NSInteger               _num;

}

@end

@implementation MmiaDetailSearchViewController

- (void)setKeyWord:(NSString *)keyWord
{
    if ( ![_keyWord isEqualToString:keyWord] )
    {
        _keyWord = keyWord;
        _searchLabel.text = _keyWord;
        [self getSearchByKeyWordWithStart:0];
    }
}

#pragma mark - LifeStyle

- (void)viewDidLoad {
    [super viewDidLoad];
     // Do any additional setup after loading the view.

    self.navigationView.backgroundColor = [UIColor clearColor];
    [self.view bringSubviewToFront:self.navigationView];
    [self addBackBtnWithTarget:self selector:@selector(tapBackClick:)];
    UIView *bgView = [[UIView alloc]init];
    bgView.backgroundColor = [UIColor clearColor];
    bgView.layer.borderColor = ColorWithHexRGBA(0xffffff, 0.3).CGColor;
    bgView.layer.borderWidth = 1.0f;
    bgView.layer.cornerRadius = 0.5f;
    bgView.layer.masksToBounds = YES;
    [self.naviBarView addSubview:bgView];
    
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(tapBackClick:)];
    [bgView addGestureRecognizer:tap];
    
    [bgView mas_makeConstraints:^(MASConstraintMaker *make){
        make.centerY.equalTo(self.naviBarView);
        make.height.equalTo(@34);
        make.left.equalTo(@50);
        make.right.equalTo(@-10);
    }];
    
   _searchLabel = [[UILabel alloc]init];
   _searchLabel.backgroundColor = [UIColor clearColor];
    _searchLabel.font = [UIFont systemFontOfSize:15];
    _searchLabel.textColor = ColorWithHexRGB(0xffffff);
    [self.navigationView addSubview:_searchLabel];
    [_searchLabel mas_makeConstraints:^(MASConstraintMaker *make){
        make.top.bottom.equalTo(bgView);
        make.left.equalTo(bgView).offset(10);
    }];

    UIImageView *searchImageView = [[UIImageView alloc]init];
    searchImageView.contentMode = UIViewContentModeCenter;
     searchImageView.image = [UIImage imageNamed:@"searchBtn.png"];
    [self.naviBarView addSubview:searchImageView];
    [searchImageView mas_makeConstraints:^(MASConstraintMaker *make){
        make.top.right.equalTo(bgView);
        make.width.height.equalTo(bgView.mas_height);
    }];
    [_searchLabel mas_updateConstraints:^(MASConstraintMaker *make){
        make.right.equalTo(searchImageView.mas_left);
    }];
}

#pragma mark - Request

- (void)getSearchByKeyWordWithStart:(NSInteger)start
{
    MmiaDetailSearchRequestModel *model = [[MmiaDetailSearchRequestModel alloc]init];
    model.keyword = _keyWord;
    model.start = start;
    model.size = Request_Size;
    NSDictionary *infoDict = [model keyValues];
       [[MMiaNetworkEngine sharedInstance]startPostAsyncRequestWithUrl:Mmia_SearchByKeyWord param:infoDict completionHandler:^(AFHTTPRequestOperation *operation, NSDictionary* responseDic){
           
           if( ![responseDic[@"status"] intValue] )
           {
               _dataModel = [MmiaPaperResponseModel objectWithKeyValues:responseDic];
               NSArray *recommendArr = [MmiaPaperRecommendModel objectArrayWithKeyValuesArray: _dataModel.recommendList];
               self.topDataArray = recommendArr;
               
                NSArray *arr = [MmiaPaperProductListModel objectArrayWithKeyValuesArray:_dataModel.searchList];
               _num = arr.count;
               self.itemsArray = [self.itemsArray arrayByAddingObjectsFromArray:arr];
                [self.collectionView reloadData];
           }
    }errorHandler:^(AFHTTPRequestOperation *operation, NSError* error){
        
    }];
}

#pragma mark - Click

- (void)tapBackClick:(id *)sender
{
    CATransition *transition = [CATransition animation];
    transition.duration = 0.5f;
    transition.timingFunction = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseInEaseOut];
    transition.type = kCATransitionFromRight;
    transition.subtype = kCATransitionFromTop;
    [self.navigationController.view.layer addAnimation:transition forKey:nil];
    [self.navigationController popViewControllerAnimated:NO];
}

#pragma mark - Public

- (void)changeTopImageView
{
    if (self.topDataArray.count == 0)
    {
        return;
    }
    
    if( _slide > self.topDataArray.count - 1 )
    {
        _slide = 0;
    }
    MmiaPaperRecommendModel *model = [self.topDataArray objectAtIndex:_slide];
    if (model.pictureUrl.length != 0 && model)
    {
        [self.topImageView sd_setImageWithURL:[NSURL URLWithString:model.pictureUrl]];
        [self.reflectedImageView sd_setImageWithURL:[NSURL URLWithString:model.pictureUrl]];
    }
    
    self.sloganLabel.text = model.title;
    self.descriptionLabel.text = model.describe;
    
    _slide++;
}

#pragma mark - collectionViewDelegate

- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    if (self.itemsArray.count == 0)
    {
        return 0;
    }
    
    return (_num >= Request_Size) ? (self.itemsArray.count + 1):self.itemsArray.count;
}

- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    UICollectionViewCell *cell;
    
    if (indexPath.row == self.itemsArray.count  && _num >= Request_Size)
    {
        cell = [collectionView dequeueReusableCellWithReuseIdentifier:MmiaLoadCellIdentifier forIndexPath:indexPath];
        [(MmiaLoadingCollectionCell *)cell startAnimation];
        
    }else {
        
         MmiaPaperProductListModel *model = [self.itemsArray objectAtIndex:indexPath.row];
        
        if (model.type == 0)
        {
            cell = [collectionView dequeueReusableCellWithReuseIdentifier:MmiaSingleGoodsCellIdentifier forIndexPath:indexPath];
            [(MmiaSingleGoodsCollectionCell *)cell reloadCellWithModel:model];
            
        }else if (model.type == 1)
        {
            cell = [collectionView dequeueReusableCellWithReuseIdentifier:MmiaDescriptionBrandCellIdentifier forIndexPath:indexPath];
            [(MmiaDescripBrandCollectionCell *)cell reloadCellWithModel:model];
        }
    }
    
    if (self.itemsArray.count - indexPath.row == 2 && _num >= 15)
    {
       [self getSearchByKeyWordWithStart:self.itemsArray.count];
    }
    
    
    return cell;
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


@end
