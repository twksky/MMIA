//
//  MmiaMainViewController.m
//  MMIA
//
//  Created by MMIA-Mac on 15-5-15.
//  Copyright (c) 2015年 yhx. All rights reserved.
//

#import "MmiaMainViewController.h"
#import "MmiaDataModel.h"
#import "MJExtension.h"
#import "AdditionHeader.h"
#import "GlobalKey.h"
#import "GlobalNetwork.h"
#import "View+MASAdditions.h"
#import "AppDelegate.h"

#import "MmiaCollectionViewCell.h"
#import "UIImageView+WebCache.h"
#import "MmiaTransitionController.h"

#import "MmiaCollectionViewSmallLayout.h"
#import "MmiaPaperViewController.h"


CGFloat const KAddOffset = 50.0f;

@interface MmiaMainViewController () <UITableViewDelegate, UITableViewDataSource, MmiaPaperViewControllerDelegate, UINavigationControllerDelegate>
{
    MmiaDataModel *_model;
    
    CGFloat _footerViewPosition;
    CGFloat _footerViewOffsetY;
    
    ////
    float firstX;
    float firstY;
    CGPoint _origin;
    CGPoint _final;
    CGFloat duration;
    
    int _lastPosition;
}
@property (nonatomic, strong) NSMutableArray* dataArray;
@property (nonatomic, strong) MmiaPaperViewController* paperViewController;

@property (nonatomic, strong) UITableView*  tableView;
@property (nonatomic, strong) UIScrollView* scrollView;

@property (strong, nonatomic) UIWindow* window;

@property (nonatomic, strong) MmiaTransitionController* transitionController;

- (void)layoutSubviews;

@end

@implementation MmiaMainViewController

#pragma mark - init

- (id)initWithCollectionViewLayout:(UICollectionViewFlowLayout *)layout
{
    if (self = [super initWithCollectionViewLayout:layout])
    {
        [self.tableView registerClass:[UITableViewCell class] forCellReuseIdentifier:MmiaTableCellIdentifier];
    }
    return self;
}

- (void)layoutSubviews
{
    self.scrollView.height = self.view.height;
    self.tableView.contentInset = UIEdgeInsetsMake(0, 0, -self.scrollView.height, 0);
    self.tableView.tableFooterView = self.scrollView;
    
    self.paperViewController.view.frame = self.scrollView.bounds;
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];

    [self layoutSubviews];
    [self.paperViewController viewWillAppear:animated];
    [self.view bringSubviewToFront:self.navigationView];
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    self.view.backgroundColor = [UIColor whiteColor];
    self.collectionView.hidden = YES;
    
    _dataArray = [[NSMutableArray alloc]init];
    
    // tableView Header
    UIView* headerView = UIView.new;
    headerView.backgroundColor = [UIColor yellowColor];
    headerView.height = 300;
    self.tableView.tableHeaderView = headerView;

    [self.scrollView addSubview:self.paperViewController.view];
    [self.paperViewController didMoveToParentViewController:self];

    [self requestWithStart:0];
    
    _window = [AppDelegate sharedAppDelegate].window;
    _window.layer.shadowRadius = 5.0f;
    _window.layer.shadowOffset = CGSizeMake(0,0);
    _window.layer.shadowColor = [UIColor blackColor].CGColor;
    _window.layer.shadowOpacity = .9f;
    UIPanGestureRecognizer* panGesture = [[UIPanGestureRecognizer alloc] initWithTarget:self action:@selector(onPan:)];
    [_window addGestureRecognizer:panGesture];
}

- (void)requestWithStart:(NSInteger)start
{
    NSDictionary *infoDict = [NSDictionary dictionaryWithObjectsAndKeys:[NSNumber numberWithInt:1697],@"userid", [NSNumber numberWithInteger:start],@"start",[NSNumber numberWithInteger:20],@"size",@"b61549cd8b00c2efddac690e8b728686", @"ticket", nil];
    
    [[MMiaNetworkEngine sharedInstance]startPostAsyncRequestWithUrl:@"ados/love/getProductLike" param:infoDict completionHandler:^(AFHTTPRequestOperation *operation, NSDictionary* responseDic)
     {
         _model = [MmiaDataModel objectWithKeyValues:responseDic];
         NSArray *arr = [MMiaDetailModel objectArrayWithKeyValuesArray:_model.data];
         for (MMiaDetailModel *data in arr)
         {
             [self.dataArray addObject:data.imgUrl];
         }
         
         [self.tableView reloadData];
         _footerViewPosition = self.tableView.contentSize.height - fabs(self.tableView.contentInset.bottom);
         _footerViewOffsetY = fabs(_footerViewPosition - self.view.height);
         
     }errorHandler:^(AFHTTPRequestOperation *operation, NSError* error){
         
     }];
}

#pragma mark - Accessors

- (UITableView *)tableView
{
    if ( !_tableView )
    {
        _tableView = UITableView.new;
        _tableView.delegate = self;
        _tableView.dataSource = self;
        _tableView.backgroundColor = [UIColor clearColor];
        [self.view addSubview:_tableView];
        
        [_tableView mas_makeConstraints:^(MASConstraintMaker *make) {
            make.top.left.bottom.right.equalTo(self.view);
        }];
    }
    return _tableView;
}

- (UIScrollView *)scrollView
{
    if( !_scrollView )
    {
        _scrollView = UIScrollView.new;
        _scrollView.delegate = self;
        _scrollView.backgroundColor = [UIColor clearColor];
        _scrollView.alwaysBounceVertical = YES;
    }
    return _scrollView;
}

- (MmiaPaperViewController *)paperViewController
{
    if( !_paperViewController )
    {
        MmiaCollectionViewSmallLayout* smallLayout = [[MmiaCollectionViewSmallLayout alloc] init];
        _paperViewController = [[MmiaPaperViewController alloc] initWithCollectionViewLayout:smallLayout];
        _paperViewController.delegate = self;
        _paperViewController.navigationView.hidden = YES;
        _paperViewController.topDataArray = @[@"photo1.jpg", @"photo2.jpg", @"photo3.jpg"];
        
        [_paperViewController willMoveToParentViewController:self];
    }
    
    return _paperViewController;
}

#pragma mark - Private

- (void)scrollPointToVisible:(CGPoint)point scrollEnabled:(BOOL)scrollEnabled
{
    dispatch_async(dispatch_get_main_queue(), ^{
        [UIView animateWithDuration:0.5 animations:^{
            [self.tableView setContentOffset:point animated:YES];
            
        } completion:^(BOOL finished) {
            self.tableView.scrollEnabled = scrollEnabled;
            self.scrollView.scrollEnabled = !scrollEnabled;
            
        }];
    });
}

#pragma mark - 响应事件

- (void)onPan:(UIPanGestureRecognizer *)pan
{
    CGPoint translation = [pan translationInView:self.window];
    CGPoint velocity = [pan velocityInView:self.window];

    switch( pan.state )
    {
            
        case UIGestureRecognizerStateBegan:
        {
            _origin = self.window.frame.origin;
        }
            break;
            
        case UIGestureRecognizerStateChanged:
        {
            if( _origin.y + translation.y >= 0 )
            {
                if( self.window.top != CGPointZero.y)
                {
                    self.window.transform = CGAffineTransformMakeTranslation(0, translation.y);
                }
                else
                {
                    self.window.transform = CGAffineTransformMakeTranslation(0, translation.y);
                }
            }
        }
            break;
            
        case UIGestureRecognizerStateEnded:
        case UIGestureRecognizerStateCancelled:
        {
            CGPoint finalOrigin = CGPointZero;
            
            if( velocity.y >= 0 )
            {
                finalOrigin.y = Main_Screen_Height - self.navigationView.height;
            }
            
            CGRect f = self.window.frame;
            f.origin = finalOrigin;
            [UIView animateWithDuration:.3 delay:0.0 options:UIViewAnimationOptionCurveEaseOut
                             animations:^{
                                 self.window.transform = CGAffineTransformIdentity;
                                 self.window.frame = f;
                                 
                             } completion:^(BOOL finished) {
                                 
                             }];
        }
            break;
            
        default:
            break;
    }
}

#pragma mark - MmiaPaperViewControllerDelegate

- (void)showViewController:(UIViewController *)viewController didSelectInPaperView:(MmiaPaperViewController *)paperView
{
    //    [self.navigationController pushViewController:viewController animated:YES];
}

#pragma mark - TableView DataSource

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 4;
}

- (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath
{
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:MmiaTableCellIdentifier forIndexPath:indexPath];
    
    cell.backgroundColor = [UIColor greenColor];
    cell.layer.cornerRadius = 4;
    cell.clipsToBounds = YES;
    UIImageView *backgroundView = [[UIImageView alloc]initWithImage:[UIImage imageNamed:@"Cell"]];
    cell.backgroundView = backgroundView;
    
    if( indexPath.row == 3 )
    {
        cell.textLabel.text = @"向上滑动加载更多";
    }
    else
    {
        cell.textLabel.text = nil;
    }
    
    return cell;
}

#pragma mark - TableView Delegate

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 100;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [self.tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    MmiaCollectionViewSmallLayout* smallLayout = [[MmiaCollectionViewSmallLayout alloc] init];
    MmiaPaperViewController* paperViewController = [[MmiaPaperViewController alloc] initWithCollectionViewLayout:smallLayout];
    paperViewController.topDataArray = @[@"photo1.jpg", @"photo2.jpg", @"photo3.jpg"];
    
    [self.navigationController pushViewController:paperViewController animated:YES];
}

#pragma mark - UIScrollViewDelegate

- (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate
{
    CGFloat contentOffsetY = scrollView.contentOffset.y;
    
    if( scrollView == self.tableView )
    {
        if( contentOffsetY >= _footerViewOffsetY + KAddOffset )
        {
            [self scrollPointToVisible:CGPointMake(0, _footerViewPosition) scrollEnabled:NO];
        }
    }
    else if( scrollView == self.scrollView )
    {
        if( contentOffsetY < -KAddOffset )
        {
            [self scrollPointToVisible:CGPointMake(0, _footerViewOffsetY) scrollEnabled:YES];
        }
    }
}

#pragma mark - UINavigationControllerDelegate

- (id <UIViewControllerInteractiveTransitioning>)navigationController:(UINavigationController *)navigationController
                          interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>) animationController
{
    if( animationController == self.transitionController)
    {
        return self.transitionController;
    }
    return nil;
}

- (id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)navigationController
                                   animationControllerForOperation:(UINavigationControllerOperation)operation
                                                fromViewController:(UIViewController *)fromVC
                                                  toViewController:(UIViewController *)toVC
{
    if (![fromVC isKindOfClass:[UICollectionViewController class]] || ![toVC isKindOfClass:[UICollectionViewController class]])
    {
        return nil;
    }
    if (!self.transitionController.hasActiveInteraction)
    {
        return nil;
    }
    
    self.transitionController.navigationOperation = operation;
    return self.transitionController;
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
}

- (void)dealloc
{
}

@end
